// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
        Not(in=sel[0], out=NotSel0);
        Not(in=sel[1], out=NotSel1);
        Not(in=sel[2], out=NotSel2);

        And(a=NotSel0, b=NotSel1, out=AndNotSel01); // 00
        And(a=NotSel0 ,b=sel[1], out=AndNotSel0Sel1); // 01
        And(a=sel[0], b=NotSel1, out=AndSel0NotSel1); // 10
        And(a=sel[0], b=sel[1], out=AndSel01); // 11

        And(a=AndNotSel01, b=NotSel2, out=AndNotSel012 ); // 000
        And(a=AndNotSel01, b=sel[2], out=AndNotSel01Sel2 ); // 100
        And(a=AndNotSel0Sel1, b=NotSel2, out=AndNotSel0Sel1NotSel2 ); // 010
        And(a=AndNotSel0Sel1, b=sel[2], out=AndNotSel0Sel12); // 110
        And(a=AndSel0NotSel1, b=NotSel2, out=AndSel0NotSel12); // 001
        And(a=AndSel0NotSel1, b=sel[2], out=AndSel0NotSel1Sel2); // 101
        And(a=AndSel01, b=NotSel2, out=AndSel01NotSel2); // 011
        And(a=AndSel01, b=sel[2], out=AndSel012); // 111

        And(a=in, b=AndNotSel012, out=a);
        And(a=in, b=AndSel0NotSel12, out=b);
        And(a=in, b=AndNotSel0Sel1NotSel2, out=c);
        And(a=in, b=AndSel01NotSel2, out=d);
        And(a=in, b=AndNotSel01Sel2 , out=e);
        And(a=in, b=AndSel0NotSel1Sel2, out=f);
        And(a=in, b=AndNotSel0Sel12, out=g);
        And(a=in, b=AndSel012, out=h);

    // Put your code here:
}